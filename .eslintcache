[{"F:\\Projects\\react-todo\\src\\index.js":"1","F:\\Projects\\react-todo\\src\\reportWebVitals.js":"2","F:\\Projects\\react-todo\\src\\App.js":"3","F:\\Projects\\react-todo\\src\\components\\Form.js":"4","F:\\Projects\\react-todo\\src\\components\\TodoList.js":"5","F:\\Projects\\react-todo\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1715,"mtime":1607097389118,"results":"10","hashOfConfig":"8"},{"size":1163,"mtime":1607096788656,"results":"11","hashOfConfig":"8"},{"size":498,"mtime":1607095444519,"results":"12","hashOfConfig":"8"},{"size":937,"mtime":1607093894686,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"twild0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},"F:\\Projects\\react-todo\\src\\index.js",[],"F:\\Projects\\react-todo\\src\\reportWebVitals.js",[],"F:\\Projects\\react-todo\\src\\App.js",["28"],"F:\\Projects\\react-todo\\src\\components\\Form.js",[],"F:\\Projects\\react-todo\\src\\components\\TodoList.js",[],["29","30"],"F:\\Projects\\react-todo\\src\\components\\Todo.js",["31"],"import React from \"react\";\r\nimport { isElement } from \"react-dom/test-utils\";\r\n\r\nconst Todo = ({ text, todos, setTodos, todo }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button className=\"complete-btn\" onClick={completeHandler}>\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button className=\"trash-btn\" onClick={deleteHandler}>\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n",{"ruleId":"32","severity":1,"message":"33","line":48,"column":6,"nodeType":"34","endLine":48,"endColumn":21,"suggestions":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveToLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["44"],"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'isElement' is defined but never used.","Identifier","unusedVar",{"desc":"47","fix":"48"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [todos, status, filterHandler, saveToLocalTodos]",{"range":"49","text":"50"},[1268,1283],"[todos, status, filterHandler, saveToLocalTodos]"]